define([],function(){var a,b=function(){},c=!0;b.prototype.loadForks=function(a){if(window.resolveLocalFileSystemURL=window.resolveLocalFileSystemURL||window.webkitResolveLocalFileSystemURL,window.device&&window.resolveLocalFileSystemURL){var b="/"+butterfly.config.appFolderName+"/",c=butterfly.config.appRootPath+butterfly.config.appFolderName+"/",d=function(b){b.length>0?(console.log("load fork modules"),require(b,a||function(){})):a&&a()};window.resolveLocalFileSystemURL(c,function(a){console.log("Load forks from: %s",c),a.createReader().readEntries(function(a){for(var c=[],e=0,f=a.length,g=function(a){a==f&&d(c)},h=0,i=a.length;i>h;h++)a[h].isDirectory?a[h].getFile("fork.js",{create:!1},function(a){console.log(a.fullPath),c.push(a.fullPath.replace(b,"../")),g(++e)},function(){g(++e)}):g(++e)},function(){console.log("loadforks: readEntries error.")})},function(a){console.log("loadforks: resolveLocalFileSystemURL error")})}};var d=function(b,d){c?(console.log("from bar:"+b+"\nmsg:"+d),Backbone.trigger("PushNotificationArrived",arguments),butterfly.trigger("NotificationArrived",arguments)):a={isBackground:b,msg:d}};b.prototype.handlePushNotifications=function(a,b){d(a,b)},b.prototype.dispatchMessageToModules=d,b.prototype.setEnableForkNotification=function(b,d){if(c!=b&&(c=b,b&&d&&a)){var e=a;a=null,this.handlePushNotifications(e.isBackground,e.msg)}},b.prototype.setEnableForkPushNotification=function(a,b){this.setEnableForkNotification(a,b)},b.prototype.getEnableForkNotification=function(){return c},b.prototype.getEnableForkPushNotification=function(){return this.getEnableForkNotification()},window.forksLoader||(window.forksLoader=new b,window.forksLoader.loadForks(function(){if(window.plugins&&window.plugins.pushNotification){var a={};"iOS"==window.device.platform?a={badge:!0,sound:!0,alert:!0,ecb:"window.forksLoader.handlePushNotifications"}:"Android"==window.device.platform&&(a={http_host:butterfly.config.chameleonUrl+"/instant",http_port:"",app_key:butterfly.config.appKey,secret:butterfly.config.appSecret,app_package_name:butterfly.config.nativeId,app_version:butterfly.config.version,basews:butterfly.config.chameleonUrl}),window.plugins.pushNotification.register(function(a){console.log("pushNotification register ok.")},function(){console.log("pushNotification register error.")},a)}}))});